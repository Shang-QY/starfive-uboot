// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/* Copyright (c) 2021 StarFive Technology Co., Ltd. */

/dts-v1/;
#include "jh7100.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/leds/common.h>
#include <dt-bindings/pinctrl/pinctrl-starfive.h>
#include <dt-bindings/starfive_fb.h>

/ {
	model = "BeagleV Starlight Beta";
	compatible = "beagle,beaglev-starlight-jh7100", "starfive,jh7100";

	aliases {
		mshc0 = &sdio0;
		mshc1 = &sdio1;
		serial0 = &uart3;
		serial1 = &uart0;
	};

	chosen {
		stdout-path = "serial0:115200n8";

        opensbi-domains {
            compatible = "opensbi,domain,config";

            tmem1: tmem1 {
                compatible = "opensbi,domain,memregion";
                base = <0x0 0xc0000000>;
                order = <30>;   // 1G
            };

            tmem2: tmem2 {
                compatible = "opensbi,domain,memregion";
                base = <0x1 0x00000000>;
                order = <32>;   // 4G
            };

            tmem3: tmem3 {
                compatible = "opensbi,domain,memregion";
                base = <0x2 0x00000000>;
                order = <31>;   // 2G
            };

            // uart used by secure linux
            tuart: tuart {
                compatible = "opensbi,domain,memregion";
                base = <0x0 0x12440000>;
                order = <16>;
                mmio;
                devices = <&uart3>;
            };

            // ethernet used by secure linux
            teth: teth {
                compatible = "opensbi,domain,memregion";
                base = <0x0 0x10020000>;
                order = <16>;
                mmio;
                devices = <&gmac>;
            };

            allmem: allmem {
                compatible = "opensbi,domain,memregion";
                base = <0x0 0x0>;
                order = <64>;
            };

            udomain: untrusted-domain {
                compatible = "opensbi,domain,instance";
                possible-harts = <&cpu0>;
                regions = <&tmem1 0x0>, <&tmem2 0x0>, <&tmem3 0x0>, <&tuart 0x0>, <&teth 0x0>, <&allmem 0x7>;
                boot-hart = <&cpu0>;
                next-arg1 = <0x0 0x82200000>;
                next-addr = <0x0 0x80200000>;
                next-mode = <0x1>;
                system-manager;
            };

            tdomain: trusted-domain {
                compatible = "opensbi,domain,instance";
                possible-harts = <&cpu1>;
                regions = <&allmem 0x7>;
                boot-hart = <&cpu1>;
                next-arg1 = <0x1 0x86000000>;
                next-addr = <0x0 0xc0200000>;
                next-mode = <0x1>;
                system-reset-allowed;
            };
        };
	};

	cpus {
		timebase-frequency = <6250000>;
        #address-cells = <1>;
		#size-cells = <0>;

		cpu0: cpu@0 {
			compatible = "sifive,u74-mc", "riscv";
            opensbi-domain = <&udomain>;
			d-cache-block-size = <64>;
			d-cache-sets = <64>;
			d-cache-size = <32768>;
			d-tlb-sets = <1>;
			d-tlb-size = <32>;
			device_type = "cpu";
			i-cache-block-size = <64>;
			i-cache-sets = <64>;
			i-cache-size = <32768>;
			i-tlb-sets = <1>;
			i-tlb-size = <32>;
			mmu-type = "riscv,sv39";
			next-level-cache = <&ccache>;
			reg = <0>;
			riscv,isa = "rv64imafdc";
			starfive,itim = <&itim0>;
			status = "okay";
			tlb-split;
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <1>;
				compatible = "riscv,cpu-intc";
				interrupt-controller;
			};
		};

		cpu1: cpu@1 {
			compatible = "sifive,u74-mc", "riscv";
            opensbi-domain = <&tdomain>;
			d-cache-block-size = <64>;
			d-cache-sets = <64>;
			d-cache-size = <32768>;
			d-tlb-sets = <1>;
			d-tlb-size = <32>;
			device_type = "cpu";
			i-cache-block-size = <64>;
			i-cache-sets = <64>;
			i-cache-size = <32768>;
			i-tlb-sets = <1>;
			i-tlb-size = <32>;
			mmu-type = "riscv,sv39";
			next-level-cache = <&ccache>;
			reg = <1>;
			riscv,isa = "rv64imafdc";
			starfive,itim = <&itim1>;
			status = "okay";
			tlb-split;
			cpu1_intc: interrupt-controller {
				#interrupt-cells = <1>;
				compatible = "riscv,cpu-intc";
				interrupt-controller;
			};
		};
	};

	memory@80000000 {
		device_type = "memory";
		reg = <0x0 0x80000000 0x2 0x0>;
	};

	leds {
		compatible = "gpio-leds";

		led-ack {
			gpios = <&gpio 43 GPIO_ACTIVE_HIGH>;
			color = <LED_COLOR_ID_GREEN>;
			function = LED_FUNCTION_HEARTBEAT;
			linux,default-trigger = "heartbeat";
			label = "ack";
		};
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

        payload_reserved: mmode_resv0@80080000 {
            reg = <0x0 0xc0000000 0x1 0xc0000000>;
        };
	};

	wifi_pwrseq: wifi-pwrseq {
		compatible = "mmc-pwrseq-simple";
		reset-gpios = <&gpio 37 GPIO_ACTIVE_LOW>;
	};
};

&gmac {
	snps,reset-gpios = <&gpio 63 GPIO_ACTIVE_LOW>;
	pinctrl-names = "default";
	pinctrl-0 = <&gmac_pins>;
};

&gpio {
	/* don't reset gpio mux for serial console on uart3 */
	starfive,keep-gpiomux = <13 14 0 2 3 45>;

	gmac_pins: gmac-0 {
		gtxclk-pins {
			pins = <PAD_FUNC_SHARE(115)>;
			bias-pull-up;
			drive-strength = <35>;
			input-enable;
			input-schmitt-enable;
			slew-rate = <0>;
		};
		miitxclk-pins {
			pins = <PAD_FUNC_SHARE(116)>;
			bias-pull-up;
			drive-strength = <14>;
			input-enable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
		tx-pins {
			pins = <PAD_FUNC_SHARE(117)>,
			       <PAD_FUNC_SHARE(119)>,
			       <PAD_FUNC_SHARE(120)>,
			       <PAD_FUNC_SHARE(121)>,
			       <PAD_FUNC_SHARE(122)>,
			       <PAD_FUNC_SHARE(123)>,
			       <PAD_FUNC_SHARE(124)>,
			       <PAD_FUNC_SHARE(125)>,
			       <PAD_FUNC_SHARE(126)>;
			bias-pull-up;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
		rxclk-pins {
			pins = <PAD_FUNC_SHARE(127)>;
			bias-pull-up;
			drive-strength = <14>;
			input-enable;
			input-schmitt-disable;
			slew-rate = <6>;
		};
		rxer-pins {
			pins = <PAD_FUNC_SHARE(129)>;
			bias-pull-up;
			drive-strength = <14>;
			input-enable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
		rx-pins {
			pins = <PAD_FUNC_SHARE(128)>,
			       <PAD_FUNC_SHARE(130)>,
			       <PAD_FUNC_SHARE(131)>,
			       <PAD_FUNC_SHARE(132)>,
			       <PAD_FUNC_SHARE(133)>,
			       <PAD_FUNC_SHARE(134)>,
			       <PAD_FUNC_SHARE(135)>,
			       <PAD_FUNC_SHARE(136)>,
			       <PAD_FUNC_SHARE(137)>,
			       <PAD_FUNC_SHARE(138)>,
			       <PAD_FUNC_SHARE(139)>,
			       <PAD_FUNC_SHARE(140)>,
			       <PAD_FUNC_SHARE(141)>;
			bias-pull-up;
			drive-strength = <14>;
			input-enable;
			input-schmitt-enable;
			slew-rate = <0>;
		};
	};

	i2c0_pins: i2c0-0 {
		i2c-pins {
			pinmux = <GPIOMUX(62, GPO_LOW,
				  GPO_I2C0_PAD_SCK_OEN,
				  GPI_I2C0_PAD_SCK_IN)>,
				 <GPIOMUX(61, GPO_LOW,
				  GPO_I2C0_PAD_SDA_OEN,
				  GPI_I2C0_PAD_SDA_IN)>;
			bias-disable; /* external pull-up */
			input-enable;
			input-schmitt-enable;
		};
	};

	i2c1_pins: i2c1-0 {
		i2c-pins {
			pinmux = <GPIOMUX(47, GPO_LOW,
				  GPO_I2C1_PAD_SCK_OEN,
				  GPI_I2C1_PAD_SCK_IN)>,
				 <GPIOMUX(48, GPO_LOW,
				  GPO_I2C1_PAD_SDA_OEN,
				  GPI_I2C1_PAD_SDA_IN)>;
			bias-pull-up;
			input-enable;
			input-schmitt-enable;
		};
	};

	i2c2_pins: i2c2-0 {
		i2c-pins {
			pinmux = <GPIOMUX(60, GPO_LOW,
				  GPO_I2C2_PAD_SCK_OEN,
				  GPI_I2C2_PAD_SCK_IN)>,
				 <GPIOMUX(59, GPO_LOW,
				  GPO_I2C2_PAD_SDA_OEN,
				  GPI_I2C2_PAD_SDA_IN)>;
			bias-disable; /* external pull-up */
			input-enable;
			input-schmitt-enable;
		};
	};

	pwm_pins: pwm-0 {
		pwm-pins {
			pinmux = <GPIOMUX(7,
				  GPO_PWM_PAD_OUT_BIT0,
				  GPO_PWM_PAD_OE_N_BIT0,
				  GPI_NONE)>,
				 <GPIOMUX(5,
				  GPO_PWM_PAD_OUT_BIT1,
				  GPO_PWM_PAD_OE_N_BIT1,
				  GPI_NONE)>;
				//  <GPIOMUX(45,
				//   GPO_PWM_PAD_OUT_BIT2,
				//   GPO_PWM_PAD_OE_N_BIT2,
				//   GPI_NONE)>;
			bias-disable;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
	};

	sdio0_pins: sdio0-0 {
		clk-pins {
			pinmux = <GPIOMUX(54, GPO_SDIO0_PAD_CCLK_OUT,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			input-disable;
			input-schmitt-disable;
		};
		sdio-pins {
			pinmux = <GPIOMUX(55, GPO_LOW, GPO_DISABLE,
				  GPI_SDIO0_PAD_CARD_DETECT_N)>,
				 <GPIOMUX(53,
				  GPO_SDIO0_PAD_CCMD_OUT,
				  GPO_SDIO0_PAD_CCMD_OEN,
				  GPI_SDIO0_PAD_CCMD_IN)>,
				 <GPIOMUX(49,
				  GPO_SDIO0_PAD_CDATA_OUT_BIT0,
				  GPO_SDIO0_PAD_CDATA_OEN_BIT0,
				  GPI_SDIO0_PAD_CDATA_IN_BIT0)>,
				 <GPIOMUX(50,
				  GPO_SDIO0_PAD_CDATA_OUT_BIT1,
				  GPO_SDIO0_PAD_CDATA_OEN_BIT1,
				  GPI_SDIO0_PAD_CDATA_IN_BIT1)>,
				 <GPIOMUX(51,
				  GPO_SDIO0_PAD_CDATA_OUT_BIT2,
				  GPO_SDIO0_PAD_CDATA_OEN_BIT2,
				  GPI_SDIO0_PAD_CDATA_IN_BIT2)>,
				 <GPIOMUX(52,
				  GPO_SDIO0_PAD_CDATA_OUT_BIT3,
				  GPO_SDIO0_PAD_CDATA_OEN_BIT3,
				  GPI_SDIO0_PAD_CDATA_IN_BIT3)>;
			bias-pull-up;
			input-enable;
			input-schmitt-enable;
		};
	};

	sdio1_pins: sdio1-0 {
		clk-pins {
			pinmux = <GPIOMUX(33, GPO_SDIO1_PAD_CCLK_OUT,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			input-disable;
			input-schmitt-disable;
		};
		sdio-pins {
			pinmux = <GPIOMUX(29,
				  GPO_SDIO1_PAD_CCMD_OUT,
				  GPO_SDIO1_PAD_CCMD_OEN,
				  GPI_SDIO1_PAD_CCMD_IN)>,
				 <GPIOMUX(36,
				  GPO_SDIO1_PAD_CDATA_OUT_BIT0,
				  GPO_SDIO1_PAD_CDATA_OEN_BIT0,
				  GPI_SDIO1_PAD_CDATA_IN_BIT0)>,
				 <GPIOMUX(30,
				  GPO_SDIO1_PAD_CDATA_OUT_BIT1,
				  GPO_SDIO1_PAD_CDATA_OEN_BIT1,
				  GPI_SDIO1_PAD_CDATA_IN_BIT1)>,
				 <GPIOMUX(34,
				  GPO_SDIO1_PAD_CDATA_OUT_BIT2,
				  GPO_SDIO1_PAD_CDATA_OEN_BIT2,
				  GPI_SDIO1_PAD_CDATA_IN_BIT2)>,
				 <GPIOMUX(31,
				  GPO_SDIO1_PAD_CDATA_OUT_BIT3,
				  GPO_SDIO1_PAD_CDATA_OEN_BIT3,
				  GPI_SDIO1_PAD_CDATA_IN_BIT3)>;
			bias-pull-up;
			input-enable;
			input-schmitt-enable;
		};
	};

	spi2_pins: spi2-0 {
		mosi-pin {
			pinmux = <GPIOMUX(18, GPO_SPI2_PAD_TXD,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			input-disable;
			input-schmitt-disable;
		};
		miso-pin {
			pinmux = <GPIOMUX(16, GPO_LOW, GPO_DISABLE,
				  GPI_SPI2_PAD_RXD)>;
			bias-pull-up;
			input-enable;
			input-schmitt-enable;
		};
		sck-pin {
			pinmux = <GPIOMUX(12, GPO_SPI2_PAD_SCK_OUT,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			input-disable;
			input-schmitt-disable;
		};
		ss-pins {
			pinmux = <GPIOMUX(15, GPO_SPI2_PAD_SS_0_N,
				  GPO_ENABLE, GPI_NONE)>,
				 <GPIOMUX(11, GPO_SPI2_PAD_SS_1_N,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			input-disable;
			input-schmitt-disable;
		};
	};

	uart0_pins: uart0-0 {
		rx-pins {
			pinmux = <GPIOMUX(40, GPO_LOW, GPO_DISABLE,
				  GPI_UART0_PAD_SIN)>,
				 <GPIOMUX(39, GPO_LOW, GPO_DISABLE,
				  GPI_UART0_PAD_CTSN)>;
			bias-pull-up;
			input-enable;
			input-schmitt-enable;
		};
		tx-pins {
			pinmux = <GPIOMUX(41, GPO_UART0_PAD_SOUT,
				  GPO_ENABLE, GPI_NONE)>,
				 <GPIOMUX(42, GPO_UART0_PAD_RTSN,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			input-disable;
			input-schmitt-disable;
		};
	};

	uart3_pins: uart3-0 {
		rx-pins {
			pinmux = <GPIOMUX(13, GPO_LOW, GPO_DISABLE,
				  GPI_UART3_PAD_SIN)>;
			bias-pull-up;
			drive-strength = <14>;
			input-enable;
			input-schmitt-enable;
			slew-rate = <0>;
		};
		tx-pins {
			pinmux = <GPIOMUX(14, GPO_UART3_PAD_SOUT,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
	};

	dvpsensor_pins: dvp0 {
		signal-pins {
			pins = <PAD_FUNC_SHARE(98)>,
			       <PAD_FUNC_SHARE(99)>,
			       <PAD_FUNC_SHARE(100)>,
			       <PAD_FUNC_SHARE(101)>,
			       <PAD_FUNC_SHARE(102)>,
			       <PAD_FUNC_SHARE(103)>,
			       <PAD_FUNC_SHARE(104)>,
			       <PAD_FUNC_SHARE(105)>,
			       <PAD_FUNC_SHARE(106)>,
			       <PAD_FUNC_SHARE(107)>,
			       <PAD_FUNC_SHARE(108)>,
			       <PAD_FUNC_SHARE(109)>,
			       <PAD_FUNC_SHARE(110)>,
			       <PAD_FUNC_SHARE(111)>,
			       <PAD_FUNC_SHARE(112)>,
			       <PAD_FUNC_SHARE(113)>,
			       <PAD_FUNC_SHARE(114)>;
			input-enable;
		};
	};

	sensor0_default: sensor0 {
		reset-pins {
			pinmux = <GPIOMUX(58, GPO_LOW,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
	};

	sensor0_reset_low: sensor0 {
		reset-pins {
			pinmux = <GPIOMUX(58, GPO_LOW,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
	};

	sensor0_reset_high: sensor0 {
		reset-pins {
			pinmux = <GPIOMUX(58, GPO_HIGH,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
	};

	sensor1_default: sensor1 {
		reset-pins {
			pinmux = <GPIOMUX(57, GPO_LOW,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
	};

	sensor1_reset_low: sensor1 {
		reset-pins {
			pinmux = <GPIOMUX(57, GPO_LOW,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
	};

	sensor1_reset_high: sensor1 {
		reset-pins {
			pinmux = <GPIOMUX(57, GPO_HIGH,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
	};

	pwmdac_pins: pwmdac_0 {
		pwmdac_pins {
			pinmux = <GPIOMUX(23, GPO_PWMDAC_LEFT_OUT,
				  GPO_ENABLE, GPI_NONE)>,
				  <GPIOMUX(24, GPO_PWMDAC_RIGHT_OUT,
				  GPO_ENABLE, GPI_NONE)>;
			bias-disable;
			drive-strength = <35>;
			input-disable;
			input-schmitt-disable;
			slew-rate = <0>;
		};
	};
};

&i2c0 {
	clock-frequency = <100000>;
	i2c-sda-hold-time-ns = <300>;
	i2c-sda-falling-time-ns = <500>;
	i2c-scl-falling-time-ns = <500>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;
	status = "okay";

	pmic@5e {
		compatible = "ti,tps65086";
		reg = <0x5e>;
		gpio-controller;
		#gpio-cells = <2>;

		regulators {
		};
	};
};

&i2c1 {
	clock-frequency = <400000>;
	i2c-sda-hold-time-ns = <300>;
	i2c-sda-falling-time-ns = <100>;
	i2c-scl-falling-time-ns = <100>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	status = "okay";

	ac108_a: ac108@3b {
		compatible = "x-power,ac108_0";
		reg = <0x3b>;
		#sound-dai-cells = <0>;
		data-protocol = <0>;
	};
	wm8960: codec@1a {
		compatible = "wlf,wm8960";
		reg = <0x1a>;
		#sound-dai-cells = <0>;
		wlf,shared-lrclk;
	};
	seeed_plane_i2c@45 {
		compatible = "seeed_panel";
		reg = <0x45>;
	};
};

&i2c2 {
	clock-frequency = <100000>;
	i2c-sda-hold-time-ns = <300>;
	i2c-sda-falling-time-ns = <500>;
	i2c-scl-falling-time-ns = <500>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins>;
	status = "okay";

	seeed_plane_i2c@45 {
		compatible = "seeed_panel";
		reg = <0x45>;

		port {
			panel_dsi_port: endpoint {
				remote-endpoint = <&dsi_out_port>;
			};
		};
	};
};

&osc_sys {
	clock-frequency = <25000000>;
};

&osc_aud {
	clock-frequency = <27000000>;
};

&ptc {
	pinctrl-names = "default";
	pinctrl-0 = <&pwm_pins>;
	status = "okay";
};

&qspi {
	nor_flash: nor-flash@0 {
		compatible = "spi-flash";
		reg = <0>;
		spi-max-frequency = <31250000>;
		page-size = <256>;
		block-size = <16>;
		cdns,read-delay = <4>;
		cdns,tshsl-ns = <1>;
		cdns,tsd2d-ns = <1>;
		cdns,tchsh-ns = <1>;
		cdns,tslch-ns = <1>;
		spi-tx-bus-width = <1>;
		spi-rx-bus-width = <1>;
	};

	nand_flash: nand-flash@1 {
		compatible = "spi-flash-nand";
		reg = <1>;
		spi-max-frequency = <31250000>;
		page-size = <2048>;
		block-size = <17>;
		cdns,read-delay = <4>;
		cdns,tshsl-ns = <1>;
		cdns,tsd2d-ns = <1>;
		cdns,tchsh-ns = <1>;
		cdns,tslch-ns = <1>;
		spi-tx-bus-width = <1>;
		spi-rx-bus-width = <1>;
	};
};

&sdio0 {
	broken-cd;
	bus-width = <4>;
	cap-sd-highspeed;
	pinctrl-names = "default";
	pinctrl-0 = <&sdio0_pins>;
	status = "okay";
};

&sdio1 {
	#address-cells = <1>;
	#size-cells = <0>;
	bus-width = <4>;
	cap-sd-highspeed;
	cap-sdio-irq;
	cap-power-off-card;
	max-frequency = <10000000>;
	mmc-pwrseq = <&wifi_pwrseq>;
	non-removable;
	pinctrl-names = "default";
	pinctrl-0 = <&sdio1_pins>;
	status = "okay";

	wifi@1 {
		compatible = "brcm,bcm4329-fmac";
		reg = <1>;
	};
};

&spi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi2_pins>;
	status = "okay";

	spi_dev0: spi@0 {
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <10000000>;
		reg = <0>;
	};
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart3_pins>;
	status = "okay";
};

&usb3 {
	dr_mode = "host";
	status = "okay";
};

&pwmdac {
	pinctrl-names = "default";
	pinctrl-0 = <&pwmdac_pins>;
	status = "okay";
};

/* #include "codecs/sf_pdm.dtsi" */
/* #include "codecs/sf_spdif.dtsi" */
/* #include "codecs/sf_ac108.dtsi" */
/* #include "codecs/sf_wm8960.dtsi" */
/* #include "codecs/sf_vad.dtsi" */
